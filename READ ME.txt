使用方法
　１．アプリケーション起動時にストレージパーミッションのリクエストを許可．
　　　リクエストが来なかった場合，アプリ設定から直接許可する．

　２．STARTボタンを押してSTOP/SAVEボタンを押すとその間の加速度センサ値(記録日時,x,y,z)を表示されているサンプリング周波数でcsvファイルに出力される．
　　　csvの出力先は，./acc_log/yy.MM.dd_HH:mm:ss:SSS.csv （年.月.日_時:分:秒:ミリ秒)）．

　３．任意のサンプリング周波数に変化したい時．
　　　(1)Input Your Sampling Frequencyに自分の今出ているサンプリング周波数を整数型で目分量で入力．
　　　(2)直下のGETボタンを押してボタンの上に入力した数字が表示されていれば完了．
　　　(3)Set a Sampling Frequency You Wantに自分のセットしたいサンプリング周波数を整数型で入力．
　　　(4)直下のGETボタンを押してボタンの上に入力した数字が表示されていれば完了．
　　　(5)２つの数字を入力して，STOP/SAVEボタンの右側のテキストが「Not Ready」から「Ready」になったことを確認して再び計測を行うことで，任意のサンプリングレートでcsv出力可能．

　備考
    ・すべて生データです．ロー/ハイパスフィルター，重力加速度除去フィルターは使用していません．
　　・API 16: Android 4.1(Jelly Bean)以上対応．のはず　（Xperia XZ1 SO-01K API28: Android 9.0，Nexus 5X API 24: Android7.0（AVD）　2台動作確認済み）
　　・加速度センサの最高分解能は端末に依存しているため，入力なしの時のサンプリング周波数は超えることができない．
　　　（※初期設定時には最大サンプリングレート（Xperia XZ1 SO-01Kだと420(Hz)～425(Hz)と計測できた）で加速度を検出している）
　　・確認された誤差は±0.001(s)ほどであった．
      調査したところ，センサリスナー(registerListener(SensorEventListener listener, Sensor sensor, int rate))の第3引数のint rateでセンサ取得間隔を設定できるのだが，
　　　現時点(2020/4/19)加速度センサにおいては正確に反映されない．（検証してくれていたサイト：https://akira-watson.com/android/accelerometer.html）
　　　したがって，まず第3引数にセンサマネージャークラスのSENSOR_DELAY_FASTESTを使用し，最高パフォーマンスで記録する．
　　　その値は端末の性能によって変動するため，ユーザにその値を入力してもらい，希望のサンプリングレートとの比率を用いて，配列を等間隔に間引くことで希望のサンプリングレートに変換する．
　　　この工程を踏んでいるため，最大サンプリング周波数と希望サンプリング周波数の比率を求めた際の誤差(floatからintにキャストしているため)で時間的な誤差が発生したと考えられる．
　　　また，最大サンプリング周波数を希望サンプリング周波数で割る際，割り切れなければどうしても誤差が発生してしまう．

　～改良案～
　　　・このアプリでは配列を生成してまとめてcsv出力しているため，配列を間引くといった操作をしている．ここで，毎フレームごとにcsvを読み込み1つずつデータを書き込むことで精度が上昇するかも？？
　　　・Timerクラスを用いる方法はセンサーが毎フレーム呼ばれることから，毎回毎回イベントリスナの登録を解除しなければいけない気がする．逆にこれを実装すればもっと単純にサンプリングレート設定できるかも？？
　　　
